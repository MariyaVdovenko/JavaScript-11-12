{"version":3,"sources":["webpack:///./weatherMarkup.js","webpack:///./getGeoPosition.js","webpack:///./index.js","webpack:///./fetchWeather.js"],"names":["refs","weatherSec","document","getElementById","icon","querySelector","location","temp","humidity","wind","conditions","options","getWeather","query","errorMessage","fetch","base","then","response","ok","json","Error","error","fetchWeather","weather","src","current","condition","textContent","name","temp_c","wind_dir","wind_kph","text","classList","remove","weatherMarkup","console","log","PNotify","defaults","styling","icons","delay","searchForm","addEventListener","e","preventDefault","currentTarget","elements","city","value","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","notice"],"mappings":"qKAEMA,EAAO,CACXC,WAAYC,SAASC,eAAe,WACpCC,KAAMF,SAASG,cAAc,SAC7BC,SAAUJ,SAASG,cAAc,+BACjCE,KAAML,SAASG,cAAc,2BAC7BG,SAAUN,SAASG,cAAc,+BACjCI,KAAMP,SAASG,cAAc,2BAC7BK,WAAYR,SAASG,cAAc,sCCN7BM,4CC0CR,SAASC,EAAWC,EAAOC,IC3CZ,SAAsBD,GAKnC,OAAOE,MAAMC,8EADsBH,GAEhCI,KAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASE,OAEjC,MAAM,IAAIC,MAAM,6BAJb,MAME,SAAAC,GACL,MAAMA,KDgCVC,CAAaV,GACVI,KAAK,SAAAO,IFnCK,SAAuBA,GACpCxB,EAAKI,KAAKqB,IAAM,SAAWD,EAAQE,QAAQC,UAAUvB,KACrDJ,EAAKM,SAASsB,YAAcJ,EAAQlB,SAASuB,KAC7C7B,EAAKO,KAAKqB,YAAcJ,EAAQE,QAAQI,OACxC9B,EAAKQ,SAASoB,YAAcJ,EAAQE,QAAQlB,SAAW,IACvDR,EAAKS,KAAKmB,YACRJ,EAAQE,QAAQK,SAAW,MAAQP,EAAQE,QAAQM,SAAW,MAChEhC,EAAKU,WAAWkB,YAAcJ,EAAQE,QAAQC,UAAUM,KAExDjC,EAAKC,WAAWiC,UAAUC,OAAO,aE2B7BC,CAAcZ,KAFlB,MAIS,SAAAF,GACLe,QAAQC,IAAIhB,GACZiB,IAAQjB,MAAMR,KAxCpByB,IAAQC,SAASC,QAAU,WAE3BF,IAAQC,SAASE,MAAQ,WACzBH,IAAQC,SAASG,MAAQ,IAEZ,CACXC,WAAY1C,SAASG,cAAc,gBACnCJ,WAAYC,SAASC,eAAe,YAGjCyC,WAAWC,iBAAiB,SAEjC,SAAiCC,GAC/BA,EAAEC,iBAGFnC,EAFckC,EAAEE,cAAcC,SAASC,KAAKC,MACvB,wBDxBfxC,EAAU,CACdyC,WAAY,MAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQ5C,MCwB3DM,KAAK,SAAAX,GAAQ,OAAOA,EAASqD,OAAOC,SAAvB,KAAoCtD,EAASqD,OAAOE,YACjE5C,KAAK,SAAAO,GASNZ,EATwCY,EAQnB,4BAVvB,MAGS,SAAAF,GAAK,OACViB,IAAQuB,OACN","file":"main.40afafdc7b3eb9e0ace5.js","sourcesContent":["'use strict';\r\n\r\nconst refs = {\r\n  weatherSec: document.getElementById('weather'),\r\n  icon: document.querySelector('.icon'),\r\n  location: document.querySelector('span[data-field=\"location\"]'),\r\n  temp: document.querySelector('span[data-field=\"temp\"]'),\r\n  humidity: document.querySelector('span[data-field=\"humidity\"]'),\r\n  wind: document.querySelector('span[data-field=\"wind\"]'),\r\n  conditions: document.querySelector('span[data-field=\"conditions\"]'),\r\n};\r\n\r\nexport default function weatherMarkup(weather) {\r\n  refs.icon.src = 'https:' + weather.current.condition.icon;\r\n  refs.location.textContent = weather.location.name;\r\n  refs.temp.textContent = weather.current.temp_c;\r\n  refs.humidity.textContent = weather.current.humidity + '%';\r\n  refs.wind.textContent =\r\n    weather.current.wind_dir + ' - ' + weather.current.wind_kph + 'kph';\r\n  refs.conditions.textContent = weather.current.condition.text;\r\n\r\n  refs.weatherSec.classList.remove('is-hidden');\r\n}\r\n","'use strict';\r\n\r\nexport default function getGeoPosition() {\r\n  const options = {\r\n    maximumAge: 1800000,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n}\r\n","'use strict';\nimport './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport weatherMarkup from './weatherMarkup';\n\nimport PNotify from 'pnotify/dist/es/PNotify';\nimport PNotifyStyleMaterial from 'pnotify/dist/es/PNotifyStyleMaterial.js';\nimport '../node_modules/pnotify/dist/PNotifyBrightTheme.css';\nimport 'material-design-icons/iconfont/material-icons.css';\n\n// Set default styling.\nPNotify.defaults.styling = 'material';\n// This icon setting requires the Material Icons font. (See below.)\nPNotify.defaults.icons = 'material';\nPNotify.defaults.delay = 3000;\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  weatherSec: document.getElementById('weather'),\n};\n\nrefs.searchForm.addEventListener('submit', searchFormSubmitHandler);\n\nfunction searchFormSubmitHandler(e) {\n  e.preventDefault();\n  const input = e.currentTarget.elements.city.value;\n  const errorMessage = 'City not foung =(';\n  getWeather(input, errorMessage);\n}\n\ngetGeoPosition()\n  .then(location => `${location.coords.latitude}+ ${location.coords.longitude}`)\n  .then(weather => searchWeaherByLocation(weather))\n  .catch(error =>\n    PNotify.notice(\n      'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n    ),\n  );\n\nfunction searchWeaherByLocation(location) {\n  const errorMessage = 'Геопозиция не найдена.';\n  getWeather(location, errorMessage);\n}\n\nfunction getWeather(query, errorMessage) {\n  fetchWeather(query)\n    .then(weather => {\n      weatherMarkup(weather);\n    })\n    .catch(error => {\n      console.log(error);\n      PNotify.error(errorMessage);\n    });\n}\n","'use strict';\r\n\r\nexport default function fetchWeather(query) {\r\n  const myKey = '057005d75e6c48b4a0610353191707';\r\n  const base = 'https://api.apixu.com/v1';\r\n  const resource = '/current.json';\r\n  const request = `?key=${myKey}&q=${query}`;\r\n  return fetch(base + resource + request)\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n\r\n      throw new Error('Something went wrong!!!');\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n"],"sourceRoot":""}