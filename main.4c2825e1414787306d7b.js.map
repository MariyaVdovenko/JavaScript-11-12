{"version":3,"sources":["webpack:///./fetchWeather.js","webpack:///./getGeoPosition.js","webpack:///./weatherMarkup.js","webpack:///./index.js"],"names":["fetchWeather","query","fetch","base","then","response","ok","json","Error","error","options","refs","weatherSec","document","getElementById","icon","querySelector","location","temp","humidity","wind","conditions","weatherMarkup","weather","src","current","condition","textContent","name","temp_c","wind_dir","wind_kph","text","classList","remove","searchForm","addEventListener","e","preventDefault","currentTarget","elements","city","value","console","log","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude"],"mappings":"uJAEe,SAASA,EAAaC,GAKnC,OAAOC,MAAMC,yCADA,yCAAsBF,IAEhCG,KAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASE,OAEjC,MAAM,IAAIC,MAAM,6BAJb,MAME,SAAAC,GACL,MAAMA,kBCXJC,ECDFC,EAAO,CACXC,WAAYC,SAASC,eAAe,WACpCC,KAAMF,SAASG,cAAc,SAC7BC,SAAUJ,SAASG,cAAc,+BACjCE,KAAML,SAASG,cAAc,2BAC7BG,SAAUN,SAASG,cAAc,+BACjCI,KAAMP,SAASG,cAAc,2BAC7BK,WAAYR,SAASG,cAAc,kCAGtB,SAASM,EAAcC,GACpCZ,EAAKI,KAAKS,IAAM,SAAWD,EAAQE,QAAQC,UAAUX,KACrDJ,EAAKM,SAASU,YAAcJ,EAAQN,SAASW,KAC7CjB,EAAKO,KAAKS,YAAcJ,EAAQE,QAAQI,OACxClB,EAAKQ,SAASQ,YAAcJ,EAAQE,QAAQN,SAAW,IACvDR,EAAKS,KAAKO,YACRJ,EAAQE,QAAQK,SAAW,MAAQP,EAAQE,QAAQM,SAAW,MAChEpB,EAAKU,WAAWM,YAAcJ,EAAQE,QAAQC,UAAUM,KAExDrB,EAAKC,WAAWqB,UAAUC,OAAO,cCftB,CACXC,WAAYtB,SAASG,cAAc,gBACnCJ,WAAYC,SAASC,eAAe,aAGjCqB,WAAWC,iBAAiB,SAEjC,SAAiCC,GAC/BA,EAAEC,iBAEFtC,EADcqC,EAAEE,cAAcC,SAASC,KAAKC,OAEzCtC,KAAK,SAAAmB,GAAO,OAAID,EAAcC,KADjC,MAES,SAAAd,GAAK,OAAIkC,QAAQC,IAAInC,QFfxBC,EAAU,CACdmC,WAAY,MAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQtC,MEc3DN,KAAK,SAAAa,GAAQ,OAAOA,EAASmC,OAAOC,SAAvB,KAAoCpC,EAASmC,OAAOE,YACjElD,KAAK,SAAAmB,GAAO,OAAIvB,EAAauB,KAC7BnB,KAAK,SAAAmB,GAAO,OAAID,EAAcC,KAHjC,MAIS,SAAAd,GAAK,OAAIkC,QAAQC,IAAInC","file":"main.4c2825e1414787306d7b.js","sourcesContent":["'use strict';\r\n\r\nexport default function fetchWeather(query) {\r\n  const myKey = '057005d75e6c48b4a0610353191707';\r\n  const base = 'https://api.apixu.com/v1';\r\n  const resource = '/current.json';\r\n  const request = `?key=${myKey}&q=${query}`;\r\n  return fetch(base + resource + request)\r\n    .then(response => {\r\n      if (response.ok) return response.json();\r\n\r\n      throw new Error('Something went wrong!!!');\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n","'use strict';\r\n\r\nexport default function getGeoPosition() {\r\n  const options = {\r\n    maximumAge: 1800000,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n}\r\n","'use strict';\r\n\r\nconst refs = {\r\n  weatherSec: document.getElementById('weather'),\r\n  icon: document.querySelector('.icon'),\r\n  location: document.querySelector('span[data-field=\"location\"]'),\r\n  temp: document.querySelector('span[data-field=\"temp\"]'),\r\n  humidity: document.querySelector('span[data-field=\"humidity\"]'),\r\n  wind: document.querySelector('span[data-field=\"wind\"]'),\r\n  conditions: document.querySelector('span[data-field=\"conditions\"]'),\r\n};\r\n\r\nexport default function weatherMarkup(weather) {\r\n  refs.icon.src = 'https:' + weather.current.condition.icon;\r\n  refs.location.textContent = weather.location.name;\r\n  refs.temp.textContent = weather.current.temp_c;\r\n  refs.humidity.textContent = weather.current.humidity + '%';\r\n  refs.wind.textContent =\r\n    weather.current.wind_dir + ' - ' + weather.current.wind_kph + 'kph';\r\n  refs.conditions.textContent = weather.current.condition.text;\r\n\r\n  refs.weatherSec.classList.remove('is-hidden');\r\n}\r\n","'use strict';\nimport './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport weatherMarkup from './weatherMarkup';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  weatherSec: document.getElementById('weather'),\n};\n\nrefs.searchForm.addEventListener('submit', searchFormSubmitHandler);\n\nfunction searchFormSubmitHandler(e) {\n  e.preventDefault();\n  const input = e.currentTarget.elements.city.value;\n  fetchWeather(input)\n    .then(weather => weatherMarkup(weather))\n    .catch(error => console.log(error));\n}\n\ngetGeoPosition()\n  .then(location => `${location.coords.latitude}+ ${location.coords.longitude}`)\n  .then(weather => fetchWeather(weather))\n  .then(weather => weatherMarkup(weather))\n  .catch(error => console.log(error));\n\nfunction getWeather(query, errorMsg) {\n  spinner.show();\n\n  fetchWeather(query)\n    .then(weather => {\n      renderWeather(weather);\n      spinner.hide();\n    })\n    .catch(error => {\n      console.log(error);\n      PNotify.error(errorMsg);\n      spinner.hide();\n    });\n}\n"],"sourceRoot":""}