{"version":3,"sources":["webpack:///./getGeoPosition.js","webpack:///./weatherMarkup.js","webpack:///./index.js","webpack:///./fetchWeather.js"],"names":["options","refs","weatherSec","document","getElementById","icon","querySelector","location","temp","humidity","wind","conditions","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","coords","latitude","longitude","weather","request","fetch","base","response","json","console","log","data","src","current","condition","textContent","name","temp_c","dir","wind_kph","text","classList","remove","weatherMarkup"],"mappings":"qKAGQA,ECDFC,EAAO,CACXC,WAAYC,SAASC,eAAe,WACpCC,KAAMF,SAASG,cAAc,SAC7BC,SAAUJ,SAASG,cAAc,+BACjCE,KAAML,SAASG,cAAc,2BAC7BG,SAAUN,SAASG,cAAc,+BACjCI,KAAMP,SAASG,cAAc,2BAC7BK,WAAYR,SAASG,cAAc,mCDN7BN,EAAU,CACdY,WAAY,MAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQf,MEC3DmB,KAAK,SAAAZ,GAAQ,OAAOA,EAASa,OAAOC,SAAvB,KAAoCd,EAASa,OAAOE,YACjEH,KAAK,SAAAI,GAAO,OCJPC,EAAO,yCDIiBD,ECHvB,IAAIV,QAAQ,SAACC,EAASC,GACJU,MAAMC,uCAAkBF,GAC5CL,KAAK,SAAAQ,GAAQ,OAAIA,EAASC,SAC1BT,KAAK,SAAAI,GACJM,QAAQC,IAAIP,OATL,IAIPC,IDKLL,KAAK,SAAAY,GAAI,ODCG,SAAuBA,GACpC9B,EAAKI,KAAK2B,IAAM,SAAWD,EAAKE,QAAQC,UAAU7B,KAClDJ,EAAKM,SAAS4B,YAAcJ,EAAKxB,SAAS6B,KAC1CnC,EAAKO,KAAK2B,YAAcJ,EAAKE,QAAQI,OACrCpC,EAAKQ,SAAS0B,YAAcJ,EAAKE,QAAQxB,SACzCR,EAAKS,KAAKyB,YAAcJ,EAAKE,QAAQvB,KAAK4B,IAAMP,EAAKE,QAAQM,SAC7DtC,EAAKU,WAAWwB,YAAcJ,EAAKE,QAAQC,UAAUM,KAErDvC,EAAKC,WAAWuC,UAAUC,OAAO,aCTnBC,CAAcZ","file":"main.bc22e42eec6dfd3b1459.js","sourcesContent":["'use strict';\r\n\r\nexport default function getGeoPosition() {\r\n  const options = {\r\n    maximumAge: 1800000,\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n}\r\n","'use strict';\r\n\r\nconst refs = {\r\n  weatherSec: document.getElementById('weather'),\r\n  icon: document.querySelector('.icon'),\r\n  location: document.querySelector('span[data-field=\"location\"]'),\r\n  temp: document.querySelector('span[data-field=\"temp\"]'),\r\n  humidity: document.querySelector('span[data-field=\"humidity\"]'),\r\n  wind: document.querySelector('span[data-field=\"wind\"]'),\r\n  conditions: document.querySelector('span[data-field=\"conditions\"]'),\r\n};\r\n\r\nexport default function weatherMarkup(data) {\r\n  refs.icon.src = 'https:' + data.current.condition.icon;\r\n  refs.location.textContent = data.location.name;\r\n  refs.temp.textContent = data.current.temp_c;\r\n  refs.humidity.textContent = data.current.humidity;\r\n  refs.wind.textContent = data.current.wind.dir + data.current.wind_kph;\r\n  refs.conditions.textContent = data.current.condition.text;\r\n\r\n  refs.weatherSec.classList.remove('is-hidden');\r\n}\r\n","'use strict';\nimport './styles.css';\nimport getGeoPosition from './getGeoPosition';\nimport fetchWeather from './fetchWeather';\nimport weatherMarkup from './weatherMarkup';\n\n// const refs = { subbmitBtn: document.querySelector('#search-form') };\n\ngetGeoPosition()\n  .then(location => `${location.coords.latitude}+ ${location.coords.longitude}`)\n  .then(weather => fetchWeather(weather))\n  .then(data => weatherMarkup(data));\n// .catch(error => console.log(error));\n","'use strict';\r\n\r\nexport default function fetchWeather(query) {\r\n  const myKey = '057005d75e6c48b4a0610353191707';\r\n  const base = 'http://api.apixu.com/v1';\r\n  const resource = '/current.json';\r\n  const request = `?key=${myKey}&q=${query}`;\r\n  return new Promise((resolve, reject) => {\r\n    const currentWeather = fetch(base + resource + request)\r\n      .then(response => response.json())\r\n      .then(weather => {\r\n        console.log(weather);\r\n      });\r\n  });\r\n}\r\n"],"sourceRoot":""}